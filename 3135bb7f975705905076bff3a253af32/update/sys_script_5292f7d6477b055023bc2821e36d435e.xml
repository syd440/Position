<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_position_man_posting</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_position_man_posting">required_skillsVALCHANGES^EQ<item endquery="false" field="required_skills" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Get Potential Candidates for Posting</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Delete existing system sourced candidate pool
	var currentCandidates = new GlideRecord('x_snc_position_man_posting_potential_candidate');
	currentCandidates.addEncodedQuery('source=system sourced^posting=' + current.getUniqueValue());
	currentCandidates.query();

	while(currentCandidates.next()) {
		currentCandidates.deleteRecord();
	}

	var skillQuery = '';
	var requiredSkills = current.getValue('required_skills').split(',') || [];

	if(requiredSkills.length > 0) {
		for(var i = 0; i < requiredSkills.length; i++) {
			if(i == 0) {
				skillQuery = 'skill=' + requiredSkills[i];
			} else {
				skillQuery = skillQuery + '^ORskill=' + requiredSkills[i];
			}
		}

		var userSkill = new GlideRecord('sys_user_has_skill');
		userSkill.addEncodedQuery(skillQuery);
		userSkill.query();

		var ga = new GlideAggregate('sys_user_has_skill');
		ga.addEncodedQuery(skillQuery);
		ga.addAggregate('COUNT(DISTINCT','skill');
		ga.setGroup(true);
		ga.groupBy('user');
		ga.query();

		while(ga.next()) {
			var skillAttainment = ga.getAggregate('COUNT(DISTINCT','skill') / requiredSkills.length;

			if(skillAttainment >= 0.5) {
				var user = new GlideRecord('sys_user');
				if(user.get(ga.user)) {
					gs.info('User ' + user.getValue('name') + ' skill attainment is ' + skillAttainment.toString());
					
					var potentialCandidate = new GlideRecord('x_snc_position_man_posting_potential_candidate');
					potentialCandidate.initialize();
					potentialCandidate.setValue('potential_candidate', user.getUniqueValue());
					potentialCandidate.setValue('posting', current.getUniqueValue());
					potentialCandidate.setValue('source', 'system sourced');
					potentialCandidate.insert();
				}
			}
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>workflow.factory</sys_created_by>
        <sys_created_on>2022-06-02 23:19:34</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>5292f7d6477b055023bc2821e36d435e</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>Get Potential Candidates for Posting</sys_name>
        <sys_overrides/>
        <sys_package display_value="Position Management" source="x_snc_position_man">3135bb7f975705905076bff3a253af32</sys_package>
        <sys_policy/>
        <sys_scope display_value="Position Management">3135bb7f975705905076bff3a253af32</sys_scope>
        <sys_update_name>sys_script_5292f7d6477b055023bc2821e36d435e</sys_update_name>
        <sys_updated_by>workflow.factory</sys_updated_by>
        <sys_updated_on>2022-06-06 22:34:36</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=5292f7d6477b055023bc2821e36d435e"/>
</record_update>
